version: '3.8'
services:
  client-backend:
    image: client:0.0.2
    container_name: client-backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
#    depends_on:
#      - service-db
    environment:
      - SERVER_PORT= 8080
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://service-db/books_db
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.5"
          memory: 512M

#  service-db:
#    image: postgres:14.7-alpine
#    environment:
#      POSTGRES_USER: admin
#      POSTGRES_PASSWORD: admin12345
#    ports:
#      - "15432:5432"
#    volumes:
#      - ./infrastructure/db/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
#      - db-data:/var/lib/postgresql/data
#    restart: unless-stopped
#    deploy:
#      resources:
#        limits:
#          cpus: "0.5"
#          memory: 512M
#        reservations:
#          cpus: "0.5"
#          memory: 512M
#
##  pgadmin:
##    container_name: pgadmin4_container
##    image: dpage/pgadmin4:7
##    restart: always
##    environment:
##      PGADMIN_DEFAULT_EMAIL: admin@admin.com
##      PGADMIN_DEFAULT_PASSWORD: root
##    ports:
##      - "5050:80"
##    volumes:
##      - pgadmin-data:/var/lib/pgadmin

  prometheus:
    image: prom/prometheus:v2.48.1
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9090" ]
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.5"
          memory: 512M

  grafana:
      image: grafana/grafana:9.5.15
      container_name: grafana
      restart: unless-stopped
      ports:
        - "3000:3000"
      environment:
        - GF_USERS_ALLOW_SIGN_UP=false
      volumes:
        - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/main.yaml
      depends_on:
        - prometheus
      healthcheck:
        test: [ "CMD", "nc", "-z", "localhost", "3000" ]
      deploy:
        resources:
          limits:
            cpus: "0.5"
            memory: 512M
          reservations:
            cpus: "0.5"
            memory: 512M

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor-exporter
    ports:
      - 8081:8081
    volumes:
      - /:/rootfs:ro
#      - /var/run:/var/run:rw
      - /var/run/docker.sock:/var/run/docker.sock:rw  # mac
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    command:
      - '-port=8081'
    depends_on:
      - client-backend
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

#volumes:
#  db-data:
#  pgadmin-data: